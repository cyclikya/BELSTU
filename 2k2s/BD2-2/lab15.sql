--1
CREATE TABLE T_RANGE (
    id NUMBER,
    data VARCHAR2(100)
) PARTITION BY RANGE (id) (
    PARTITION p1 VALUES LESS THAN (10),
    PARTITION p2 VALUES LESS THAN (20),
    PARTITION p3 VALUES LESS THAN (MAXVALUE)
);

--2
CREATE TABLE T_INTERVAL (
    id NUMBER,
    date_column DATE
) PARTITION BY RANGE (date_column) INTERVAL (NUMTOYMINTERVAL(1, 'MONTH')) (
    PARTITION p1 VALUES LESS THAN (TO_DATE('2023-01-01', 'YYYY-MM-DD'))
);

--3
CREATE TABLE T_HASH (
    id NUMBER,
    data VARCHAR2(100)
) PARTITION BY HASH (data) PARTITIONS 4;

--4
CREATE TABLE T_LIST (
    id NUMBER,
    category CHAR(1)
) PARTITION BY LIST (category) (
    PARTITION p1 VALUES ('A'),
    PARTITION p2 VALUES ('B'),
    PARTITION p3 VALUES ('C')
);

--5
INSERT INTO T_RANGE VALUES (5, 'Data for p1');
INSERT INTO T_RANGE VALUES (15, 'Data for p2');
INSERT INTO T_RANGE VALUES (25, 'Data for p3');

INSERT INTO T_INTERVAL VALUES (1, TO_DATE('2022-12-01', 'YYYY-MM-DD'));
INSERT INTO T_INTERVAL VALUES (2, TO_DATE('2023-01-15', 'YYYY-MM-DD'));

INSERT INTO T_HASH VALUES (1, 'Hash Data 1');
INSERT INTO T_HASH VALUES (2, 'Hash Data 2');

INSERT INTO T_LIST VALUES (1, 'A');
INSERT INTO T_LIST VALUES (2, 'B');
INSERT INTO T_LIST VALUES (3, 'C');

SELECT * FROM T_RANGE PARTITION (p1);
SELECT * FROM T_RANGE PARTITION (p2);
SELECT * FROM T_RANGE PARTITION (p3);

SELECT * FROM T_INTERVAL PARTITION (p1);
SELECT * FROM T_INTERVAL PARTITION FOR (TO_DATE('2023-01-15', 'YYYY-MM-DD'));

SELECT * FROM T_HASH;

SELECT * FROM T_LIST PARTITION (p1);
SELECT * FROM T_LIST PARTITION (p2);
SELECT * FROM T_LIST PARTITION (p3);

--6
ALTER TABLE T_RANGE ENABLE ROW MOVEMENT;
ALTER TABLE T_INTERVAL ENABLE ROW MOVEMENT;
ALTER TABLE T_HASH ENABLE ROW MOVEMENT;
ALTER TABLE T_LIST ENABLE ROW MOVEMENT;

UPDATE T_RANGE SET id = 12 WHERE id = 5;
SELECT * FROM T_RANGE PARTITION (p1);
SELECT * FROM T_RANGE PARTITION (p2);

UPDATE T_INTERVAL SET date_column = TO_DATE('2023-02-01', 'YYYY-MM-DD') 
WHERE date_column = TO_DATE('2022-12-01', 'YYYY-MM-DD');
SELECT * FROM T_INTERVAL PARTITION (p1);
SELECT * FROM T_INTERVAL PARTITION FOR (TO_DATE('2023-02-01', 'YYYY-MM-DD'));

UPDATE T_LIST SET category = 'B' WHERE category = 'A';
SELECT * FROM T_LIST PARTITION (p1);
SELECT * FROM T_LIST PARTITION (p2);

--7
ALTER TABLE T_RANGE MERGE PARTITIONS p1, p2 INTO PARTITION p_merged;

SELECT partition_name, high_value 
FROM user_tab_partitions 
WHERE table_name = 'T_RANGE';

--8
DROP TABLE T_LIST;

CREATE TABLE T_LIST (
    id NUMBER,
    category CHAR(1)
) PARTITION BY LIST (category) (
    PARTITION p1 VALUES ('A'),
    PARTITION p2 VALUES ('B'),
    PARTITION p3 VALUES ('C'),
    PARTITION p_other VALUES (DEFAULT)
);

INSERT INTO T_LIST VALUES(1, 'A');
INSERT INTO T_LIST VALUES(2, 'B');
INSERT INTO T_LIST VALUES(3, 'C');
INSERT INTO T_LIST VALUES(4, 'D');
COMMIT;

ALTER TABLE T_LIST ENABLE ROW MOVEMENT;

ALTER TABLE T_LIST 
SPLIT PARTITION p_other INTO (
    PARTITION p4 VALUES ('D'),
    PARTITION p_other
);

SELECT partition_name, high_value 
FROM USER_TAB_PARTITIONS 
WHERE TABLE_NAME = 'T_LIST';

SELECT * FROM T_LIST PARTITION (p1);
SELECT * FROM T_LIST PARTITION (p2);
SELECT * FROM T_LIST PARTITION (p3);
SELECT * FROM T_LIST PARTITION (p4);
SELECT * FROM T_LIST PARTITION (p_other);

--9
SELECT partition_name FROM user_tab_partitions WHERE table_name = 'T_HASH';

CREATE TABLE T_HASH_NONPART (
    id NUMBER,
    data VARCHAR2(100)
);

INSERT INTO T_HASH_NONPART VALUES (100, 'Test data for exchange');

ALTER TABLE T_HASH 
EXCHANGE PARTITION SYS_P571 WITH TABLE T_HASH_NONPART 
WITHOUT VALIDATION;

SELECT * FROM T_HASH PARTITION (SYS_P571);
SELECT * FROM T_HASH_NONPART;

--10
SELECT table_name, partitioning_type, partition_count 
FROM user_part_tables
ORDER BY table_name;

SELECT partition_name, high_value, tablespace_name
FROM user_tab_partitions
WHERE table_name = 'T_LIST'
ORDER BY partition_position;

SELECT * FROM T_LIST PARTITION (P1);

SELECT * FROM T_RANGE PARTITION FOR (5);
SELECT * FROM T_LIST PARTITION FOR ('A');